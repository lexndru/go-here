#!/bin/sh
#
# MIT License
#
# Copyright (c) 2019 Alexandru Catrina <alex@codeissues.net>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

export GOHERE_BIN=$HOME/bin
export GOHERE_SCRIPT=go-here
export HOMEPAGE=http://github.com/lexndru/go-here

# check if env vars are exported correctly
if [ -z "$HOME" ]; then
    echo "Cannot find user home directory as \$HOME"
    echo "Please fix this and try again"
    exit 1
fi

# prepare $HOME and $PATH
if [ ! -d "$GOHERE_BIN" ]; then
    echo "A new \"bin\" directory will be created in your $HOME directory"
    read -p "Continue? [Yn] " step
    if [ -z "$step" ]; then
        step=Y
    fi
    case $step in
        Y|y) {
            if ! mkdir -p "$GOHERE_BIN"; then
                echo "Cannot create directory... Please create $GOHERE_BIN and try again"
                exit 1
            else
                echo "Successfully created directory $GOHERE_BIN"
                if ! (echo $PATH | grep $GOHERE_BIN); then
                    if [ -f "$HOME/.profile" ]; then
                        echo "export PATH=\"\$PATH:\$HOME/bin\" # added by Go Here" >> $HOME/.profile
                        echo "Updated \$PATH with $GOHERE_BIN"
                    else
                        echo "Cannot update \$PATH... Please add $GOHERE_BIN to \$PATH and try again"
                    fi
                    source $HOME/.profile
                fi
            fi
        } ;;
        N|n) {
            echo "Install cannot continue"
            echo "Closing..."
            echo "Bye"
            exit 0
        } ;;
        *) {
            echo "Unsupported action \"$step\""
            echo "Please try again"
            exit 1
        } ;;
    esac
fi

# clean old scripts if any
rm -f $GOHERE_SCRIPT 2> /dev/null

# build script
cat > $GOHERE_SCRIPT <<EOF
#!/bin/sh
#
EOF

# check for license file
if [ ! -f LICENSE ]; then
    echo "Cannot find LICENSE file..."
    exit 1
fi

# append license to wrapper
cat LICENSE | while read line; do
    echo "# $line" >> $GOHERE_SCRIPT
done

# about script
cat >> $GOHERE_SCRIPT <<EOF
#
# Generated by Go Here installer on $(date)
#
# Go Here is a minimalistic wrapper for Golang's command line interface.
# Check more about it at: $HOMEPAGE

EOF

# get script source
if [ -f $(pwd)/src/${GOHERE_SCRIPT}.sh ]; then
    echo "$(cat $(pwd)/src/${GOHERE_SCRIPT}.sh | tail -n +23)" >> $GOHERE_SCRIPT
else
    echo "Cannot find source code!"
    exit 1
fi

# end script source
cat >> $GOHERE_SCRIPT <<EOF

# Generated by Go Here installer on $(date)
EOF

# move to $HOME dir
if command -v $GOHERE_SCRIPT > /dev/null 2>&1; then
    if ! grep $HOMEPAGE $GOHERE_SCRIPT > /dev/null 2>&1; then
        echo "Another script named $GOHERE_SCRIPT already exists in $GOHERE_BIN"
        read -p "Do you want to replace it? [yN] " replace
        if [ -z "$replace" ]; then
            step=N
        fi
        while true; do
            case $replace in
                y|Y) {
                    if ! mv $GOHERE_SCRIPT $GOHERE_BIN/$GOHERE_SCRIPT; then
                        echo "Cannot replace file in $GOHERE_BIN"
                        echo "Please check permissions and try again"
                        exit 1
                    else
                        echo "Successfully replaced file $GOHERE_SCRIPT"
                        break
                    fi
                } ;;
                n|N) {
                    echo "Doing nothing... Please move file or consult docs"
                    echo "Cannot install Go Here at the moment"
                    echo "Closing"
                    exit 0
                } ;;
                *) {
                    echo "Cannot understand answer"
                } ;;
            esac
        done
    else
        read -p "Update ${GOHERE_SCRIPT}? [Yn] " update
        if [ -z "$update" ]; then
            update=Y
        fi
        while true; do
            case $update in
                y|Y) {
                    if ! mv $GOHERE_SCRIPT $GOHERE_BIN/$GOHERE_SCRIPT; then
                        echo "Cannot update file in $GOHERE_BIN"
                        echo "Please check permissions and try again"
                        exit 1
                    else
                        echo "Updated file"
                        break
                    fi
                } ;;
                n|N) {
                    echo "Doing nothing... Go Here is already installed"
                    echo "Closing"
                    exit 0
                } ;;
                *) {
                    echo "Cannot understand answer"
                } ;;
            esac
        done
    fi
else
    if ! mv "$GOHERE_SCRIPT" "$GOHERE_BIN/$GOHERE_SCRIPT"; then
        echo "Cannot install script"
        echo "Please check permissions and try again"
        exit 1
    fi
fi

# make executable
if ! chmod +x $GOHERE_BIN/$GOHERE_SCRIPT; then
    echo "Cannot make script executable"
    echo "Please check permissions and try again"
    exit 1
fi

# end of install
echo "Successfully installed script $GOHERE_SCRIPT"
